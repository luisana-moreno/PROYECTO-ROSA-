-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.tmacatinsum
(
    tma_idcatin INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomcati character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmacatinsum_pkey PRIMARY KEY (tma_idcatin)
);

CREATE TABLE IF NOT EXISTS public.tmacolbovin
(
    tma_idcolbo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomcolb character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmacolbovin_pkey PRIMARY KEY (tma_idcolbo)
);

CREATE TABLE IF NOT EXISTS public.tmaempleado
(
    tma_idemplo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nombrel character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT tmaempleado_pkey PRIMARY KEY (tma_idemplo)
);

CREATE TABLE IF NOT EXISTS public.tmaestbovin
(
    tma_idestbo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomestb character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmaestbovin_pkey PRIMARY KEY (tma_idestbo)
);

CREATE TABLE IF NOT EXISTS public.tmaestfactu
(
    tma_idestfa INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomestf character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmaestfactu_pkey PRIMARY KEY (tma_idestfa)
);

CREATE TABLE IF NOT EXISTS public.tmaestpotre
(
    tma_idestpo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomestp character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmaestpotre_pkey PRIMARY KEY (tma_idestpo)
);

CREATE TABLE IF NOT EXISTS public.tmaetabovin
(
    tma_idetabo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nometab character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmaetabovin_pkey PRIMARY KEY (tma_idetabo)
);

CREATE TABLE IF NOT EXISTS public.tmalotes
(
    tma_idlote INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomlote character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT tmalotes_pkey PRIMARY KEY (tma_idlote)
);

CREATE TABLE IF NOT EXISTS public.tmarazabovi
(
    tma_idrazab INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomraza character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmarazabovi_pkey PRIMARY KEY (tma_idrazab)
);

CREATE TABLE IF NOT EXISTS public.tmarolusuar
(
    tma_idrolus INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomrolu character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmarolusuar_pkey PRIMARY KEY (tma_idrolus)
);

CREATE TABLE IF NOT EXISTS public.tmatipcomp
(
    tma_idtipcom INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipc character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatipcomp_pkey PRIMARY KEY (tma_idtipcom)
);

CREATE TABLE IF NOT EXISTS public.tmatipmante
(
    tma_idtipma INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipm character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatipmante_pkey PRIMARY KEY (tma_idtipma)
);

CREATE TABLE IF NOT EXISTS public.tmatipmovim
(
    tma_idtipmo INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipm character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatipmovim_pkey PRIMARY KEY (tma_idtipmo)
);

CREATE TABLE IF NOT EXISTS public.tmatippagos
(
    tma_idtippag INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipp character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatippagos_pkey PRIMARY KEY (tma_idtippag)
);

CREATE TABLE IF NOT EXISTS public.tmatipvacun
(
    tma_idtipva INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipv character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatipvacun_pkey PRIMARY KEY (tma_idtipva)
);

CREATE TABLE IF NOT EXISTS public.tmatipventa
(
    tma_idtipve INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtipv character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatipventa_pkey PRIMARY KEY (tma_idtipve)
);

CREATE TABLE IF NOT EXISTS public.tmatratamen
(
    tma_idtrata INT GENERATED BY DEFAULT AS IDENTITY,
    tma_nomtrat character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT tmatratamen_pkey PRIMARY KEY (tma_idtrata)
);

CREATE TABLE IF NOT EXISTS public.ttrasistenc
(
    ttr_idasisen INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idemplea integer,
    ttr_horaentr time without time zone,
    ttr_horasali time without time zone,
    ttr_horatrab time without time zone,
    ttr_fechaasi date,
    CONSTRAINT ttrasistenc_pkey PRIMARY KEY (ttr_idasisen)
);

CREATE TABLE IF NOT EXISTS public.ttrbovinoss
(
    ttr_idbovino INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_numerobv integer,
    ttr_idrazabo integer,
    ttr_fecnacim date,
    ttr_idcolorb integer,
    ttr_pesokilo double precision,
    ttr_idetapav integer,
    ttr_idestadb integer,
    CONSTRAINT ttrbovinoss_pkey PRIMARY KEY (ttr_idbovino)
);

CREATE TABLE IF NOT EXISTS public.ttrclienteee
(
    ttr_idclient INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_nomcompa character varying(100) COLLATE pg_catalog."default",
    ttr_nombrecl character varying(100) COLLATE pg_catalog."default",
    ttr_apellido character varying(100) COLLATE pg_catalog."default",
    ttr_documecl character varying(20) COLLATE pg_catalog."default",
    ttr_telefono character varying(20) COLLATE pg_catalog."default",
    ttr_direccio text COLLATE pg_catalog."default",
    ttr_correocl character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT ttrclienteee_pkey PRIMARY KEY (ttr_idclient)
);

CREATE TABLE IF NOT EXISTS public.ttregresoss
(
    ttr_idegreso INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idempreg integer,
    ttr_fechpago date,
    ttr_idtippag integer,
    ttr_idnomref integer,
    ttr_idpagref integer,
    ttr_fechcrea timestamp without time zone,
    ttr_fechupda timestamp without time zone,
    CONSTRAINT ttregresoss_pkey PRIMARY KEY (ttr_idegreso)
);

CREATE TABLE IF NOT EXISTS public.ttrempleado
(
    ttr_idemplo INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_nombrel character varying(100) COLLATE pg_catalog."default",
    ttr_nomsegu character varying(100) COLLATE pg_catalog."default",
    ttr_apellid character varying(100) COLLATE pg_catalog."default",
    ttr_apesegu character varying(100) COLLATE pg_catalog."default",
    ttr_documen character varying(20) COLLATE pg_catalog."default",
    ttr_fecnaci date,
    ttr_telefon character varying(20) COLLATE pg_catalog."default",
    ttr_direcci text COLLATE pg_catalog."default",
    ttr_feccont date,
    ttr_idcargp integer,
    ttr_feccrea timestamp without time zone,
    ttr_fecupda timestamp without time zone,
    CONSTRAINT ttrempleado_pkey PRIMARY KEY (ttr_idemplo)
);

CREATE TABLE IF NOT EXISTS public.ttrfacturas
(
    ttr_idfactur INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idclient integer,
    ttr_idusuref integer,
    ttr_idprodct integer,
    ttr_fechafac timestamp without time zone,
    ttr_idtipven integer,
    ttr_litrosfc double precision,
    ttr_idregmdc integer,
    ttr_idestfac integer,
    ttr_montofac double precision,
    ttr_idtipcom integer,
    CONSTRAINT ttrfacturas_pkey PRIMARY KEY (ttr_idfactur)
);

CREATE TABLE IF NOT EXISTS public.ttrinsumoso
(
    ttr_idinsumo INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idcatein integer,
    ttr_nominsum character varying(100) COLLATE pg_catalog."default",
    ttr_cantidad integer,
    ttr_fechaven date,
    CONSTRAINT ttrinsumoso_pkey PRIMARY KEY (ttr_idinsumo)
);

CREATE TABLE IF NOT EXISTS public.ttrlotpotr
(
    ttr_idlotpot INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idpotrer integer,
    ttr_idlote integer,
    ttr_fechaasi date,
    CONSTRAINT ttrlotpotr_pkey PRIMARY KEY (ttr_idlotpot)
);

CREATE TABLE IF NOT EXISTS public.ttrmovimien
(
    ttr_idmovime INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idinsumo integer,
    ttr_idtipmov integer,
    ttr_cantimov integer,
    ttr_fechamov timestamp without time zone,
    ttr_fechcrea timestamp without time zone,
    ttr_fechupda timestamp without time zone,
    CONSTRAINT ttrmovimien_pkey PRIMARY KEY (ttr_idmovime)
);

CREATE TABLE IF NOT EXISTS public.ttrnominass
(
    ttr_idnomina INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idasiste integer,
    ttr_tothoras double precision,
    ttr_totpagos double precision,
    ttr_fechaini date,
    ttr_fechafin date,
    ttr_fechcrea timestamp without time zone,
    CONSTRAINT ttrnominass_pkey PRIMARY KEY (ttr_idnomina)
);

CREATE TABLE IF NOT EXISTS public.ttrpaginsum
(
    ttr_idpagins INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idinsump integer,
    ttr_montopag double precision,
    ttr_fechapag timestamp without time zone,
    ttr_fechcrea timestamp without time zone,
    ttr_fechupda timestamp without time zone,
    CONSTRAINT ttrpaginsum_pkey PRIMARY KEY (ttr_idpagins)
);

CREATE TABLE IF NOT EXISTS public.ttrpotreros
(
    ttr_idpotrer INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_codpotre character varying(20) COLLATE pg_catalog."default",
    ttr_idestpot integer,
    ttr_idtipman integer,
    ttr_fechamnt date,
    ttr_descripc text COLLATE pg_catalog."default",
    CONSTRAINT ttrpotreros_pkey PRIMARY KEY (ttr_idpotrer)
);

CREATE TABLE IF NOT EXISTS public.ttrprodlech
(
    ttr_idprodlc INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idbovlec integer,
    ttr_fechapro date,
    ttr_litrsprd double precision,
    CONSTRAINT ttrprodlech_pkey PRIMARY KEY (ttr_idprodlc)
);

CREATE TABLE IF NOT EXISTS public.ttrregmedic
(
    ttr_idregmed INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idbovref integer,
    ttr_idempmed integer,
    ttr_idmovref integer,
    ttr_diagnost text COLLATE pg_catalog."default",
    ttr_idtratam integer,
    ttr_idvacuna integer,
    ttr_fechareg timestamp without time zone,
    CONSTRAINT ttrregmedic_pkey PRIMARY KEY (ttr_idregmed)
);

CREATE TABLE IF NOT EXISTS public.ttrusuarioo
(
    ttr_idusuar INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_nombrel character varying(100) COLLATE pg_catalog."default",
    ttr_apellid character varying(100) COLLATE pg_catalog."default",
    ttr_correoe character varying(100) COLLATE pg_catalog."default",
    ttr_contrasena character varying(255) COLLATE pg_catalog."default",
    ttr_telefon character varying(20) COLLATE pg_catalog."default",
    ttr_idrolus integer,
    ttr_token character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT ttrusuarioo_pkey PRIMARY KEY (ttr_idusuar)
);

ALTER TABLE IF EXISTS public.ttrasistenc
    ADD CONSTRAINT ttrasistenc_ttr_idemplea_fkey FOREIGN KEY (ttr_idemplea)
    REFERENCES public.ttrempleado (ttr_idemplo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrbovinoss
    ADD CONSTRAINT ttrbovinoss_ttr_idcolorb_fkey FOREIGN KEY (ttr_idcolorb)
    REFERENCES public.tmacolbovin (tma_idcolbo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrbovinoss
    ADD CONSTRAINT ttrbovinoss_ttr_idestadb_fkey FOREIGN KEY (ttr_idestadb)
    REFERENCES public.tmaestbovin (tma_idestbo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrbovinoss
    ADD CONSTRAINT ttrbovinoss_ttr_idetapav_fkey FOREIGN KEY (ttr_idetapav)
    REFERENCES public.tmaetabovin (tma_idetabo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrbovinoss
    ADD CONSTRAINT ttrbovinoss_ttr_idrazabo_fkey FOREIGN KEY (ttr_idrazabo)
    REFERENCES public.tmarazabovi (tma_idrazab) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttregresoss
    ADD CONSTRAINT ttregresoss_ttr_idempreg_fkey FOREIGN KEY (ttr_idempreg)
    REFERENCES public.ttrempleado (ttr_idemplo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttregresoss
    ADD CONSTRAINT ttregresoss_ttr_idnomref_fkey FOREIGN KEY (ttr_idnomref)
    REFERENCES public.ttrnominass (ttr_idnomina) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttregresoss
    ADD CONSTRAINT ttregresoss_ttr_idpagref_fkey FOREIGN KEY (ttr_idpagref)
    REFERENCES public.ttrpaginsum (ttr_idpagins) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttregresoss
    ADD CONSTRAINT ttregresoss_ttr_idtippag_fkey FOREIGN KEY (ttr_idtippag)
    REFERENCES public.tmatippagos (tma_idtippag) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrempleado
    ADD CONSTRAINT ttrempleado_ttr_idcargp_fkey FOREIGN KEY (ttr_idcargp)
    REFERENCES public.tmaempleado (tma_idemplo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idclient_fkey FOREIGN KEY (ttr_idclient)
    REFERENCES public.ttrclienteee (ttr_idclient) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idestfac_fkey FOREIGN KEY (ttr_idestfac)
    REFERENCES public.tmaestfactu (tma_idestfa) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idprodct_fkey FOREIGN KEY (ttr_idprodct)
    REFERENCES public.ttrprodlech (ttr_idprodlc) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idregmdc_fkey FOREIGN KEY (ttr_idregmdc)
    REFERENCES public.ttrregmedic (ttr_idregmed) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idtipcom_fkey FOREIGN KEY (ttr_idtipcom)
    REFERENCES public.tmatipcomp (tma_idtipcom) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idtipven_fkey FOREIGN KEY (ttr_idtipven)
    REFERENCES public.tmatipventa (tma_idtipve) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrfacturas
    ADD CONSTRAINT ttrfacturas_ttr_idusuref_fkey FOREIGN KEY (ttr_idusuref)
    REFERENCES public.ttrusuarioo (ttr_idusuar) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrinsumoso
    ADD CONSTRAINT ttrinsumoso_ttr_idcatein_fkey FOREIGN KEY (ttr_idcatein)
    REFERENCES public.tmacatinsum (tma_idcatin) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrlotpotr
    ADD CONSTRAINT ttrlotpotr_ttr_idlote_fkey FOREIGN KEY (ttr_idlote)
    REFERENCES public.tmalotes (tma_idlote) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrlotpotr
    ADD CONSTRAINT ttrlotpotr_ttr_idpotrer_fkey FOREIGN KEY (ttr_idpotrer)
    REFERENCES public.ttrpotreros (ttr_idpotrer) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrmovimien
    ADD CONSTRAINT ttrmovimien_ttr_idinsumo_fkey FOREIGN KEY (ttr_idinsumo)
    REFERENCES public.ttrinsumoso (ttr_idinsumo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrmovimien
    ADD CONSTRAINT ttrmovimien_ttr_idtipmov_fkey FOREIGN KEY (ttr_idtipmov)
    REFERENCES public.tmatipmovim (tma_idtipmo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrnominass
    ADD CONSTRAINT ttrnominass_ttr_idasiste_fkey FOREIGN KEY (ttr_idasiste)
    REFERENCES public.ttrasistenc (ttr_idasisen) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrpaginsum
    ADD CONSTRAINT ttrpaginsum_ttr_idinsump_fkey FOREIGN KEY (ttr_idinsump)
    REFERENCES public.ttrinsumoso (ttr_idinsumo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrpotreros
    ADD CONSTRAINT ttrpotreros_ttr_idestpot_fkey FOREIGN KEY (ttr_idestpot)
    REFERENCES public.tmaestpotre (tma_idestpo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrpotreros
    ADD CONSTRAINT ttrpotreros_ttr_idtipman_fkey FOREIGN KEY (ttr_idtipman)
    REFERENCES public.tmatipmante (tma_idtipma) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrprodlech
    ADD CONSTRAINT ttrprodlech_ttr_idbovlec_fkey FOREIGN KEY (ttr_idbovlec)
    REFERENCES public.ttrbovinoss (ttr_idbovino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrregmedic
    ADD CONSTRAINT ttrregmedic_ttr_idbovref_fkey FOREIGN KEY (ttr_idbovref)
    REFERENCES public.ttrbovinoss (ttr_idbovino) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrregmedic
    ADD CONSTRAINT ttrregmedic_ttr_idempmed_fkey FOREIGN KEY (ttr_idempmed)
    REFERENCES public.ttrempleado (ttr_idemplo) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrregmedic
    ADD CONSTRAINT ttrregmedic_ttr_idmovref_fkey FOREIGN KEY (ttr_idmovref)
    REFERENCES public.ttrmovimien (ttr_idmovime) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrregmedic
    ADD CONSTRAINT ttrregmedic_ttr_idtratam_fkey FOREIGN KEY (ttr_idtratam)
    REFERENCES public.tmatratamen (tma_idtrata) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrregmedic
    ADD CONSTRAINT ttrregmedic_ttr_idvacuna_fkey FOREIGN KEY (ttr_idvacuna)
    REFERENCES public.tmatipvacun (tma_idtipva) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.ttrusuarioo
    ADD CONSTRAINT ttrusuarioo_ttr_idrolus_fkey FOREIGN KEY (ttr_idrolus)
    REFERENCES public.tmarolusuar (tma_idrolus) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE TABLE IF NOT EXISTS public.ttrbovlotpotr
(
    ttr_idbovlotpot INT GENERATED BY DEFAULT AS IDENTITY,
    ttr_idbovino integer NOT NULL,
    ttr_idlote integer NOT NULL,
    ttr_idpotrer integer NOT NULL,
    ttr_fechaini date NOT NULL,
    ttr_fechafin date, -- Puede ser NULL si el bovino aún está en el lote/potrero
    ttr_fechcrea timestamp without time zone,
    ttr_fechupda timestamp without time zone,
    CONSTRAINT ttrbovlotpotr_pkey PRIMARY KEY (ttr_idbovlotpot),
    CONSTRAINT ttrbovlotpotr_ttr_idbovino_fkey FOREIGN KEY (ttr_idbovino)
        REFERENCES public.ttrbovinoss (ttr_idbovino) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ttrbovlotpotr_ttr_idlote_fkey FOREIGN KEY (ttr_idlote)
        REFERENCES public.tmalotes (tma_idlote) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT ttrbovlotpotr_ttr_idpotrer_fkey FOREIGN KEY (ttr_idpotrer)
        REFERENCES public.ttrpotreros (ttr_idpotrer) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
);
END;
